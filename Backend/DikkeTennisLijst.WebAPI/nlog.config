<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true"
      throwConfigExceptions="true"
      internalLogFile="${basedir}/logs/nlog-internal.log"
      internalLogLevel="Info">

  <time xsi:type="FastUTC" />

  <extensions>
    <add assembly="NLog.Web.AspNetCore" />
    <add assembly="NLog.Extensions.AzureBlobStorage" />
  </extensions>

  <variable name="myLocalLogFolder"		value="${basedir}/logs" />
  <variable name="myEnvironment"		  value="${environment:ASPNETCORE_ENVIRONMENT}" />
  <variable name="myException"		    value="${onexception:inner=| Exception\: ${newline} ${exception:format=toString,Data}} ${newline}" />
  <variable name="myProperties"		    value="${onHasProperties:| Properties\: ${all-event-properties}}" />
  <variable name="myAspNetLayout"		  value="| URL\: ${aspnet-request-url} | Action\: ${aspnet-mvc-action}" />
  <variable name="myAspNetCondition"	value="contains('${logger}', 'WebApi.Controllers')" />
  <variable name="myAspNet"			      value="${when:when=${myAspNetCondition}:inner=${myAspNetLayout}}" />
  <variable name="myLayout"           value="${longdate:universalTime=true} UTC | ${machinename} |${uppercase:${level:padding=-5}}| ${logger:shortName=true} | ${message} ${myProperties} ${myAspNet} ${myException}" />

  <targets>
    <target name="AzureBlobStorage"
        type="AzureBlobStorage"
        layout="${myLayout}"
        connectionString="${configsetting:item=ConnectionStrings.StorageConnectionString}"
        container="logs"
        blobName="${date:universalTime=true:format=yyyy-MM-dd}.log" />
  </targets>

  <targets async="true">
    <target xsi:type="Console" name="LifetimeConsole" layout="${level:truncate=4}\: ${logger}[0]${newline}      ${message}" />
  </targets>

  <targets async="true">
    <default-target-parameters
        xsi:type="File"
        archiveAboveSize="5242880"
        archiveNumbering="Sequence"
        layout="${myLayout}" />

    <target xsi:type="File"
        name="RestFile"
        fileName="${myLocalLogFolder}/all-logs.log"
        archiveFileName="${myLocalLogFolder}/archives/all-logs-${shortdate}.{###}.log" />

    <target xsi:type="File"
        name="SQLFile"
        fileName="${myLocalLogFolder}/sql-logs.log"
        archiveFileName="${myLocalLogFolder}/archives/sql-logs-${shortdate}.{###}.log" />
  </targets>

  <rules>
    <logger name="Microsoft.EntityFrameworkCore.Database.Command" minlevel="trace" writeTo="SQLFile" final="true">
      <filters defaultAction="Ignore">
        <when condition="'${myEnvironment}' == 'Development'" action="Log" />
      </filters>
    </logger>

    <logger name="*" minlevel="Trace" writeTo="RestFile">
      <filters defaultAction="Ignore">
        <when condition="'${myEnvironment}' == 'Development'" action="Log" />
      </filters>
    </logger>

    <logger name="*" minlevel="Info" writeTo="AzureBlobStorage">
      <filters defaultAction="Log">
        <when condition="'${myEnvironment}' == 'Development'" action="Ignore" />
      </filters>
    </logger>

    <!-- Note: Do not remove. Sending hosting lifetime messages to console target -->
    <logger name="Microsoft.Hosting.Lifetime" level="Info" writeTo="LifetimeConsole" final="true" />
  </rules>
</nlog>